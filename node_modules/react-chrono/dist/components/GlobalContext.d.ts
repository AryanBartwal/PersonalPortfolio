/**
 * LEGACY GlobalContext - Maintained for backward compatibility
 *
 * This file now acts as a compatibility layer over the new optimized contexts.
 * New code should use the optimized contexts directly from ./contexts/
 *
 * @deprecated Use OptimizedContextProvider and hooks from ./contexts/ instead
 */
import { FunctionComponent } from 'react';
import { type LegacyContextProps, type ButtonTexts } from './contexts/legacy-types';
export type ContextProps = LegacyContextProps;
export type { ButtonTexts };
export declare const GlobalContext: import("react").Context<LegacyContextProps>;
/**
 * Legacy GlobalContextProvider - wraps the new optimized provider
 * @deprecated Use OptimizedContextProvider directly
 */
declare const GlobalContextProvider: FunctionComponent<ContextProps>;
/**
 * Legacy hook to access the global context
 * @deprecated Use useGlobalContext, useStableContext, or useDynamicContext from ./contexts/hooks
 */
export declare const useGlobalContextLegacy: () => LegacyContextProps;
export default GlobalContextProvider;
