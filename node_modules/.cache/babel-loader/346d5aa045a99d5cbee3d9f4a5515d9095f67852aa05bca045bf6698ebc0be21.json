{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\OneDrive\\\\Desktop\\\\coding\\\\personal-e-portfolio\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// For debugging purposes, uncomment this line if you want to test with a simplified component\n// import './debugTest';\n\n// Wrap the entire rendering in a try-catch for better error reporting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntry {\n  ReactDOM.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n  console.log('React app rendered successfully');\n} catch (error) {\n  console.error('Error rendering React app:', error);\n\n  // Display a fallback error message in the DOM\n  const rootElement = document.getElementById('root');\n  if (rootElement) {\n    rootElement.innerHTML = `\n      <div style=\"padding: 20px; font-family: Arial, sans-serif; text-align: center;\">\n        <h1 style=\"color: #e74c3c;\">Something went wrong</h1>\n        <p>There was an error loading the application.</p>\n        <pre style=\"background: #f8f9fa; padding: 15px; text-align: left; overflow: auto; margin-top: 20px;\">\n          ${error.toString()}\n        </pre>\n      </div>\n    `;\n  }\n}","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","console","log","error","rootElement","innerHTML","toString"],"sources":["C:/Users/aryan/OneDrive/Desktop/coding/personal-e-portfolio/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// For debugging purposes, uncomment this line if you want to test with a simplified component\n// import './debugTest';\n\n// Wrap the entire rendering in a try-catch for better error reporting\ntry {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  console.log('React app rendered successfully');\n} catch (error) {\n  console.error('Error rendering React app:', error);\n  \n  // Display a fallback error message in the DOM\n  const rootElement = document.getElementById('root');\n  if (rootElement) {\n    rootElement.innerHTML = `\n      <div style=\"padding: 20px; font-family: Arial, sans-serif; text-align: center;\">\n        <h1 style=\"color: #e74c3c;\">Something went wrong</h1>\n        <p>There was an error loading the application.</p>\n        <pre style=\"background: #f8f9fa; padding: 15px; text-align: left; overflow: auto; margin-top: 20px;\">\n          ${error.toString()}\n        </pre>\n      </div>\n    `;\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAI;EACFH,QAAQ,CAACI,MAAM,cACbD,OAAA,CAACJ,KAAK,CAACM,UAAU;IAAAC,QAAA,eACfH,OAAA,CAACF,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;AAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;;EAElD;EACA,MAAMC,WAAW,GAAGL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACnD,IAAII,WAAW,EAAE;IACfA,WAAW,CAACC,SAAS,GAAG;AAC5B;AACA;AACA;AACA;AACA,YAAYF,KAAK,CAACG,QAAQ,CAAC,CAAC;AAC5B;AACA;AACA,KAAK;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}